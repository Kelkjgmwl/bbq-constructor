import { useState } from "react";

const modules = [
  { id: "mangal_700", name: "–ú–∞–Ω–≥–∞–ª 700", width: 720 },
  { id: "pech_480", name: "–ü–µ—á—å –ø–æ–¥ –∫–∞–∑–∞–Ω", width: 500 },
  { id: "koktal_600", name: "–ö–æ–∫—Ç–∞–ª 600", width: 620 },
  { id: "gas_2burner_500", name: "–ì–∞–∑ 500", width: 520 },
  { id: "table_800", name: "–°—Ç–æ–ª 800", width: 820 },
  { id: "table_1000", name: "–°—Ç–æ–ª 1000", width: 1020 },
];

// üëá –°–ª–æ–≤–∞—Ä—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–∫—Ä—ã—Ç–∏–π (–≤ –ø–∏–∫—Å–µ–ª—è—Ö)
const overlapMap = {
  pech_480: 40,
  koktal_600: 40,
  gas_2burner_500: 48,
  table_800: 45.5,
  table_1000: 40,
  // –¥–æ–±–∞–≤–ª—è–π —Å—é–¥–∞ –Ω–æ–≤—ã–µ –º–æ–¥—É–ª–∏ –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
};

export default function BBQConstructor() {
  const [selected, setSelected] = useState([]);
  const scale = 0.4; // üëà –ú–µ–Ω—è–µ—à—å —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –º–∞—Å—à—Ç–∞–±–∞ –≤—Å–µ—Ö –±–ª–æ–∫–æ–≤

  const addModule = (mod) => setSelected([...selected, mod]);
  const reset = () => setSelected([]);

  const totalLength = selected.reduce(
    (sum, m, i) => sum + m.width + (i > 0 ? -40 : 0),
    0
  );
  const pricePerMeter = 235000;
  const priceTotal = (totalLength / 1000) * pricePerMeter;

  return (
    <div style={{ padding: '24px', fontFamily: 'sans-serif' }}>
      <h1 style={{ fontSize: '28px', fontWeight: 'bold', marginBottom: '24px' }}>
        –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ç–æ—Ä –∫–æ–º–ø–ª–µ–∫—Å–∞
      </h1>

      <div style={{ marginBottom: '24px', display: 'flex', gap: '12px', flexWrap: 'wrap' }}>
        {modules.map((mod) => (
          <button
            key={mod.id}
            onClick={() => addModule(mod)}
            style={{
              padding: '12px 18px',
              borderRadius: '8px',
              background: '#fff',
              border: '2px solid #ccc',
              cursor: 'pointer',
              fontSize: '16px',
              fontWeight: '500'
            }}
          >
            {mod.name}
          </button>
        ))}
        <button
          onClick={reset}
          style={{
            padding: '12px 18px',
            borderRadius: '8px',
            background: 'red',
            color: 'white',
            border: 'none',
            fontWeight: '600',
            fontSize: '16px',
            cursor: 'pointer'
          }}
        >
          –°–±—Ä–æ—Å–∏—Ç—å
        </button>
      </div>

      <div
        style={{
          overflowX: 'auto',
          padding: '24px',
          borderRadius: '16px',
          background: '#f7f7f7',
          border: '1px solid #ddd',
          position: 'relative',
        }}
      >
        <div style={{ display: 'flex', alignItems: 'flex-end', position: 'relative' }}>
          {selected.map((mod, index) => (
            <div
              key={index}
              style={{
                marginLeft: index > 0 ? `-${(overlapMap[mod.id] || 40) * scale}px` : '0px', // üëà –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ª–æ–≤–∞—Ä—å –æ—Ç—Å—Ç—É–ø–æ–≤
                zIndex: index,
                height: '500px',
                width: `${mod.width * scale}px`,
                position: 'relative',
                flexShrink: 0,
                display: 'flex',
                flexDirection: 'column',
                alignItems: 'center',
              }}
            >
              <img
                src={`modules/${mod.id}.png`}
                alt={mod.name}
                style={{
                  width: '100%',
                  height: '100%',
                  objectFit: 'contain',
                  background: 'transparent',
                  position: 'relative',
                }}
              />
              <div style={{ textAlign: 'center', fontSize: '16px', fontWeight: '500', marginTop: '8px' }}>
                {mod.name}
              </div>
            </div>
          ))}
        </div>
      </div>

      <div style={{ marginTop: '32px', fontWeight: 'bold', fontSize: '24px' }}>
        –û–±—â–∞—è –¥–ª–∏–Ω–∞: {totalLength} –º–º<br />
        –°—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ–º–ø–ª–µ–∫—Å–∞: {Math.round(priceTotal).toLocaleString()} ‚Ç∏
      </div>
    </div>
  );
}
